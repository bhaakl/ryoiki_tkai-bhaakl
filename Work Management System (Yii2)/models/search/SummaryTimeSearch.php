<?php


namespace app\models\search;

use app\models\WorkerReportCardWorker;
use yii\data\ArrayDataProvider;
use yii\helpers\ArrayHelper;

class SummaryTimeSearch extends WorkerReportCardWorker
{
    const TYPE_PLAN = 'plan';
    const TYPE_FACT = 'fact';
    const TYPE_BOTH = 'both';

    const TYPES = [
        self::TYPE_FACT => 'Факт',
        self::TYPE_PLAN => 'План',
//        self::TYPE_BOTH => 'План/Факт',
    ];

    public $type = self::TYPE_FACT;
    public $product_id;
    public $work_month;

    public function rules(): array
    {
        return [
            [['work_month'], 'required'],
            [['product_id'], 'integer'],
            [['type'], 'string'],
            [['work_month'], 'safe']
        ];
    }

    public function save($runValidation = true, $attributeNames = null)
    {
        foreach ($this->modelsToSave as $model) {
            $model->save();
        }
        return true;
//        return parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
    }

    public function init()
    {
        parent::init();
        $this->work_month = date('Y-m');
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels(): array
    {
        return [
            'totalHours' => 'Итого',
            'work_month' => 'Месяц'
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function search($params, $recsOnPage = 0): \yii\data\ArrayDataProvider
    {
        $this->load($params);
        $date = explode('-', $this->work_month);
        $query = self::find()
            ->joinWith('card')
            ->select(['product_id', 'day' => 'DAY(work_date)', 'hours' => "SUM($this->hoursAttribute)"])
            ->groupBy(['product_id', 'work_date'])
            ->where(['YEAR(work_date)' => $date[0]])
            ->andWhere(['MONTH(work_date)' => $date[1]]);

        $query->andFilterWhere(['product_id' => $this->product_id]);

        $allModels = $query->asArray()->all();
//        $query->andFilterWhere([WorkerReportCardWorker::tableName().'.user_id' => $this->user_id]);
        $allModels = ArrayHelper::map($allModels, 'day', 'hours', 'product_id');

        $dataProvider = new ArrayDataProvider([
            'allModels' => $allModels,
            'pagination' => false,
        ]);
        return $dataProvider;
    }

    public function getHoursAttribute()
    {
        return 'hours_'.$this->type;
    }
}