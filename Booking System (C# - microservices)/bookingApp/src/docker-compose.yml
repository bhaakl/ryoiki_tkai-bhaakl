services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
      - "./rabbitmq:/etc/bookingapp/"
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_CONFIG_FILE=/etc/bookingapp/rabbitmq.conf

  sqlserver:
    image: mcr.microsoft.com/azure-sql-edge
    container_name: sqlserver
    volumes:
      - sqlserverdata:/var/opt/mssql
    ports:
      - "1434:1433"
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Developer
      - SA_PASSWORD=8jkGh47hnDw89Haq8LN2

  mailserver:
    image: maildev/maildev:1.1.0
    container_name: mailserver
    ports:
      - "25:25"
      - "4000:80"

  logserver:
    image: datalust/seq:latest
    container_name: logserver
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y

  catalogmanagementapi:
    image: bookingapp/catalogmanagementapi:1.0
    build: 
        context: ./
        dockerfile: ./CatalogManagementAPI/Dockerfile
    container_name: catalogmanagementapi-1
    depends_on:
      - rabbitmq
      - sqlserver
    ports:
      - "5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production

  customermanagementapi:
    image: bookingapp/customermanagementapi:1.0
    build: 
        context: ./
        dockerfile: ./CustomerManagementAPI/Dockerfile
    container_name: customermanagementapi-1
    depends_on:
      - rabbitmq
      - sqlserver
    ports:
      - "5100"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production

  auditlogservice:
    image: bookingapp/auditlogservice:1.0
    build: 
        context: ./
        dockerfile: ./AuditlogService/Dockerfile
    container_name: auditlogservice
    depends_on:
      - rabbitmq
    environment:
      - DOTNET_ENVIRONMENT=Production

  notificationservice:
    image: bookingapp/notificationservice:1.0
    build: 
        context: ./
        dockerfile: ./NotificationService/Dockerfile
    container_name: notificationservice
    depends_on:
      - rabbitmq
      - sqlserver
      - mailserver
    environment:
      - DOTNET_ENVIRONMENT=Production

  timeservice:
    image: bookingapp/timeservice:1.0
    build: 
        context: ./
        dockerfile: ./TimeService/Dockerfile
    container_name: timeservice
    depends_on:
      - rabbitmq
    environment:
      - DOTNET_ENVIRONMENT=Production

  webapp:
    image: bookingapp/webapp:1.0
    build: 
      context: ./
      dockerfile: ./WebApp/Dockerfile
    container_name: webapp
    depends_on:
      - customermanagementapi
      - catalogmanagementapi
    ports:
      - "7005:7005"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production

volumes:
  sqlserverdata:
    external: true
  rabbitmqdata:
    external: true